$date
	Tue Nov  9 11:21:01 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 16 ! prod [15:0] $end
$var reg 8 " b [7:0] $end
$var reg 1 # clk $end
$var reg 8 $ mul [7:0] $end
$var reg 1 % reset $end
$var reg 1 & write $end
$scope module seq_mul0 $end
$var wire 8 ' b [7:0] $end
$var wire 1 ( carry $end
$var wire 1 ) clk $end
$var wire 8 * mul [7:0] $end
$var wire 16 + prod [15:0] $end
$var wire 1 , reset $end
$var wire 16 - sum [15:0] $end
$var wire 1 . write $end
$scope module a1 $end
$var wire 16 / a [15:0] $end
$var wire 8 0 b [7:0] $end
$var wire 8 1 b1 [7:0] $end
$var wire 7 2 c [6:0] $end
$var wire 1 ( carry $end
$var wire 16 3 out [15:0] $end
$var wire 1 4 test $end
$scope module s1 $end
$var wire 1 4 i0 $end
$var wire 1 5 i1 $end
$var wire 1 6 o $end
$upscope $end
$scope module s2 $end
$var wire 1 4 i0 $end
$var wire 1 7 i1 $end
$var wire 1 8 o $end
$upscope $end
$scope module s3 $end
$var wire 1 4 i0 $end
$var wire 1 9 i1 $end
$var wire 1 : o $end
$upscope $end
$scope module s4 $end
$var wire 1 4 i0 $end
$var wire 1 ; i1 $end
$var wire 1 < o $end
$upscope $end
$scope module s5 $end
$var wire 1 4 i0 $end
$var wire 1 = i1 $end
$var wire 1 > o $end
$upscope $end
$scope module s6 $end
$var wire 1 4 i0 $end
$var wire 1 ? i1 $end
$var wire 1 @ o $end
$upscope $end
$scope module s7 $end
$var wire 1 4 i0 $end
$var wire 1 A i1 $end
$var wire 1 B o $end
$upscope $end
$scope module s8 $end
$var wire 1 4 i0 $end
$var wire 1 C i1 $end
$var wire 1 D o $end
$upscope $end
$scope module f1 $end
$var wire 1 E cin $end
$var wire 1 F cout $end
$var wire 1 G i0 $end
$var wire 1 H i1 $end
$var wire 1 I sum $end
$var wire 1 J t0 $end
$var wire 1 K t1 $end
$var wire 1 L t2 $end
$scope module _i0 $end
$var wire 1 G i0 $end
$var wire 1 H i1 $end
$var wire 1 E i2 $end
$var wire 1 I o $end
$var wire 1 M t $end
$scope module xor2_0 $end
$var wire 1 G i0 $end
$var wire 1 H i1 $end
$var wire 1 M o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 E i0 $end
$var wire 1 M i1 $end
$var wire 1 I o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 G i0 $end
$var wire 1 H i1 $end
$var wire 1 J o $end
$upscope $end
$scope module _i2 $end
$var wire 1 H i0 $end
$var wire 1 E i1 $end
$var wire 1 K o $end
$upscope $end
$scope module _i3 $end
$var wire 1 E i0 $end
$var wire 1 G i1 $end
$var wire 1 L o $end
$upscope $end
$scope module _i4 $end
$var wire 1 J i0 $end
$var wire 1 K i1 $end
$var wire 1 L i2 $end
$var wire 1 F o $end
$var wire 1 N t $end
$scope module or2_0 $end
$var wire 1 J i0 $end
$var wire 1 K i1 $end
$var wire 1 N o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 L i0 $end
$var wire 1 N i1 $end
$var wire 1 F o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q i0 $end
$var wire 1 R i1 $end
$var wire 1 S sum $end
$var wire 1 T t0 $end
$var wire 1 U t1 $end
$var wire 1 V t2 $end
$scope module _i0 $end
$var wire 1 Q i0 $end
$var wire 1 R i1 $end
$var wire 1 O i2 $end
$var wire 1 S o $end
$var wire 1 W t $end
$scope module xor2_0 $end
$var wire 1 Q i0 $end
$var wire 1 R i1 $end
$var wire 1 W o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 O i0 $end
$var wire 1 W i1 $end
$var wire 1 S o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Q i0 $end
$var wire 1 R i1 $end
$var wire 1 T o $end
$upscope $end
$scope module _i2 $end
$var wire 1 R i0 $end
$var wire 1 O i1 $end
$var wire 1 U o $end
$upscope $end
$scope module _i3 $end
$var wire 1 O i0 $end
$var wire 1 Q i1 $end
$var wire 1 V o $end
$upscope $end
$scope module _i4 $end
$var wire 1 T i0 $end
$var wire 1 U i1 $end
$var wire 1 V i2 $end
$var wire 1 P o $end
$var wire 1 X t $end
$scope module or2_0 $end
$var wire 1 T i0 $end
$var wire 1 U i1 $end
$var wire 1 X o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 V i0 $end
$var wire 1 X i1 $end
$var wire 1 P o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ i0 $end
$var wire 1 \ i1 $end
$var wire 1 ] sum $end
$var wire 1 ^ t0 $end
$var wire 1 _ t1 $end
$var wire 1 ` t2 $end
$scope module _i0 $end
$var wire 1 [ i0 $end
$var wire 1 \ i1 $end
$var wire 1 Y i2 $end
$var wire 1 ] o $end
$var wire 1 a t $end
$scope module xor2_0 $end
$var wire 1 [ i0 $end
$var wire 1 \ i1 $end
$var wire 1 a o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 Y i0 $end
$var wire 1 a i1 $end
$var wire 1 ] o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 [ i0 $end
$var wire 1 \ i1 $end
$var wire 1 ^ o $end
$upscope $end
$scope module _i2 $end
$var wire 1 \ i0 $end
$var wire 1 Y i1 $end
$var wire 1 _ o $end
$upscope $end
$scope module _i3 $end
$var wire 1 Y i0 $end
$var wire 1 [ i1 $end
$var wire 1 ` o $end
$upscope $end
$scope module _i4 $end
$var wire 1 ^ i0 $end
$var wire 1 _ i1 $end
$var wire 1 ` i2 $end
$var wire 1 Z o $end
$var wire 1 b t $end
$scope module or2_0 $end
$var wire 1 ^ i0 $end
$var wire 1 _ i1 $end
$var wire 1 b o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ` i0 $end
$var wire 1 b i1 $end
$var wire 1 Z o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 c cin $end
$var wire 1 d cout $end
$var wire 1 e i0 $end
$var wire 1 f i1 $end
$var wire 1 g sum $end
$var wire 1 h t0 $end
$var wire 1 i t1 $end
$var wire 1 j t2 $end
$scope module _i0 $end
$var wire 1 e i0 $end
$var wire 1 f i1 $end
$var wire 1 c i2 $end
$var wire 1 g o $end
$var wire 1 k t $end
$scope module xor2_0 $end
$var wire 1 e i0 $end
$var wire 1 f i1 $end
$var wire 1 k o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 c i0 $end
$var wire 1 k i1 $end
$var wire 1 g o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 e i0 $end
$var wire 1 f i1 $end
$var wire 1 h o $end
$upscope $end
$scope module _i2 $end
$var wire 1 f i0 $end
$var wire 1 c i1 $end
$var wire 1 i o $end
$upscope $end
$scope module _i3 $end
$var wire 1 c i0 $end
$var wire 1 e i1 $end
$var wire 1 j o $end
$upscope $end
$scope module _i4 $end
$var wire 1 h i0 $end
$var wire 1 i i1 $end
$var wire 1 j i2 $end
$var wire 1 d o $end
$var wire 1 l t $end
$scope module or2_0 $end
$var wire 1 h i0 $end
$var wire 1 i i1 $end
$var wire 1 l o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 j i0 $end
$var wire 1 l i1 $end
$var wire 1 d o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f5 $end
$var wire 1 m cin $end
$var wire 1 n cout $end
$var wire 1 o i0 $end
$var wire 1 p i1 $end
$var wire 1 q sum $end
$var wire 1 r t0 $end
$var wire 1 s t1 $end
$var wire 1 t t2 $end
$scope module _i0 $end
$var wire 1 o i0 $end
$var wire 1 p i1 $end
$var wire 1 m i2 $end
$var wire 1 q o $end
$var wire 1 u t $end
$scope module xor2_0 $end
$var wire 1 o i0 $end
$var wire 1 p i1 $end
$var wire 1 u o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 m i0 $end
$var wire 1 u i1 $end
$var wire 1 q o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 o i0 $end
$var wire 1 p i1 $end
$var wire 1 r o $end
$upscope $end
$scope module _i2 $end
$var wire 1 p i0 $end
$var wire 1 m i1 $end
$var wire 1 s o $end
$upscope $end
$scope module _i3 $end
$var wire 1 m i0 $end
$var wire 1 o i1 $end
$var wire 1 t o $end
$upscope $end
$scope module _i4 $end
$var wire 1 r i0 $end
$var wire 1 s i1 $end
$var wire 1 t i2 $end
$var wire 1 n o $end
$var wire 1 v t $end
$scope module or2_0 $end
$var wire 1 r i0 $end
$var wire 1 s i1 $end
$var wire 1 v o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 t i0 $end
$var wire 1 v i1 $end
$var wire 1 n o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f6 $end
$var wire 1 w cin $end
$var wire 1 x cout $end
$var wire 1 y i0 $end
$var wire 1 z i1 $end
$var wire 1 { sum $end
$var wire 1 | t0 $end
$var wire 1 } t1 $end
$var wire 1 ~ t2 $end
$scope module _i0 $end
$var wire 1 y i0 $end
$var wire 1 z i1 $end
$var wire 1 w i2 $end
$var wire 1 { o $end
$var wire 1 !" t $end
$scope module xor2_0 $end
$var wire 1 y i0 $end
$var wire 1 z i1 $end
$var wire 1 !" o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 w i0 $end
$var wire 1 !" i1 $end
$var wire 1 { o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 y i0 $end
$var wire 1 z i1 $end
$var wire 1 | o $end
$upscope $end
$scope module _i2 $end
$var wire 1 z i0 $end
$var wire 1 w i1 $end
$var wire 1 } o $end
$upscope $end
$scope module _i3 $end
$var wire 1 w i0 $end
$var wire 1 y i1 $end
$var wire 1 ~ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 | i0 $end
$var wire 1 } i1 $end
$var wire 1 ~ i2 $end
$var wire 1 x o $end
$var wire 1 "" t $end
$scope module or2_0 $end
$var wire 1 | i0 $end
$var wire 1 } i1 $end
$var wire 1 "" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ~ i0 $end
$var wire 1 "" i1 $end
$var wire 1 x o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f7 $end
$var wire 1 #" cin $end
$var wire 1 $" cout $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 '" sum $end
$var wire 1 (" t0 $end
$var wire 1 )" t1 $end
$var wire 1 *" t2 $end
$scope module _i0 $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 #" i2 $end
$var wire 1 '" o $end
$var wire 1 +" t $end
$scope module xor2_0 $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 +" o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 #" i0 $end
$var wire 1 +" i1 $end
$var wire 1 '" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 (" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 &" i0 $end
$var wire 1 #" i1 $end
$var wire 1 )" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 #" i0 $end
$var wire 1 %" i1 $end
$var wire 1 *" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 (" i0 $end
$var wire 1 )" i1 $end
$var wire 1 *" i2 $end
$var wire 1 $" o $end
$var wire 1 ," t $end
$scope module or2_0 $end
$var wire 1 (" i0 $end
$var wire 1 )" i1 $end
$var wire 1 ," o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 *" i0 $end
$var wire 1 ," i1 $end
$var wire 1 $" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module f8 $end
$var wire 1 -" cin $end
$var wire 1 ( cout $end
$var wire 1 ." i0 $end
$var wire 1 /" i1 $end
$var wire 1 0" sum $end
$var wire 1 1" t0 $end
$var wire 1 2" t1 $end
$var wire 1 3" t2 $end
$scope module _i0 $end
$var wire 1 ." i0 $end
$var wire 1 /" i1 $end
$var wire 1 -" i2 $end
$var wire 1 0" o $end
$var wire 1 4" t $end
$scope module xor2_0 $end
$var wire 1 ." i0 $end
$var wire 1 /" i1 $end
$var wire 1 4" o $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 -" i0 $end
$var wire 1 4" i1 $end
$var wire 1 0" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ." i0 $end
$var wire 1 /" i1 $end
$var wire 1 1" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 /" i0 $end
$var wire 1 -" i1 $end
$var wire 1 2" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 -" i0 $end
$var wire 1 ." i1 $end
$var wire 1 3" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 1" i0 $end
$var wire 1 2" i1 $end
$var wire 1 3" i2 $end
$var wire 1 ( o $end
$var wire 1 5" t $end
$scope module or2_0 $end
$var wire 1 1" i0 $end
$var wire 1 2" i1 $end
$var wire 1 5" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 3" i0 $end
$var wire 1 5" i1 $end
$var wire 1 ( o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module rf1 $end
$var wire 8 6" b [7:0] $end
$var wire 1 ) clk $end
$var wire 1 ( cout $end
$var wire 16 7" prod [15:0] $end
$var wire 16 8" r0 [15:0] $end
$var wire 1 , reset $end
$var wire 16 9" sum [15:0] $end
$var wire 1 . write $end
$scope module re1 $end
$var wire 8 :" b [7:0] $end
$var wire 1 ) clk $end
$var wire 1 . write $end
$var wire 16 ;" x [15:0] $end
$var wire 16 <" y [15:0] $end
$var wire 1 =" zero $end
$scope module m1 $end
$var wire 1 >" i0 $end
$var wire 1 ?" i1 $end
$var wire 1 . j $end
$var wire 1 @" o $end
$upscope $end
$scope module m2 $end
$var wire 1 A" i0 $end
$var wire 1 B" i1 $end
$var wire 1 . j $end
$var wire 1 C" o $end
$upscope $end
$scope module m3 $end
$var wire 1 D" i0 $end
$var wire 1 E" i1 $end
$var wire 1 . j $end
$var wire 1 F" o $end
$upscope $end
$scope module m4 $end
$var wire 1 G" i0 $end
$var wire 1 H" i1 $end
$var wire 1 . j $end
$var wire 1 I" o $end
$upscope $end
$scope module m5 $end
$var wire 1 J" i0 $end
$var wire 1 K" i1 $end
$var wire 1 . j $end
$var wire 1 L" o $end
$upscope $end
$scope module m6 $end
$var wire 1 M" i0 $end
$var wire 1 N" i1 $end
$var wire 1 . j $end
$var wire 1 O" o $end
$upscope $end
$scope module m7 $end
$var wire 1 P" i0 $end
$var wire 1 Q" i1 $end
$var wire 1 . j $end
$var wire 1 R" o $end
$upscope $end
$scope module m8 $end
$var wire 1 S" i0 $end
$var wire 1 T" i1 $end
$var wire 1 . j $end
$var wire 1 U" o $end
$upscope $end
$scope module m9 $end
$var wire 1 V" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 W" o $end
$upscope $end
$scope module m10 $end
$var wire 1 X" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 Y" o $end
$upscope $end
$scope module m11 $end
$var wire 1 Z" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 [" o $end
$upscope $end
$scope module m12 $end
$var wire 1 \" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 ]" o $end
$upscope $end
$scope module m13 $end
$var wire 1 ^" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 _" o $end
$upscope $end
$scope module m14 $end
$var wire 1 `" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 a" o $end
$upscope $end
$scope module m15 $end
$var wire 1 b" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 c" o $end
$upscope $end
$scope module m16 $end
$var wire 1 d" i0 $end
$var wire 1 =" i1 $end
$var wire 1 . j $end
$var wire 1 e" o $end
$upscope $end
$upscope $end
$scope module w1 $end
$var wire 1 ) clk $end
$var wire 1 ( cout $end
$var wire 1 f" load $end
$var wire 16 g" out [15:0] $end
$var wire 1 , reset $end
$var wire 16 h" sum [15:0] $end
$var wire 1 . write $end
$scope module p0 $end
$var wire 1 i" _in $end
$var wire 1 ) clk $end
$var wire 1 j" in $end
$var wire 1 f" load $end
$var wire 1 k" out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 k" i0 $end
$var wire 1 j" i1 $end
$var wire 1 f" j $end
$var wire 1 i" o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 l" df_in $end
$var wire 1 i" in $end
$var wire 1 k" out $end
$var wire 1 , reset $end
$var wire 1 m" reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 m" o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 i" i0 $end
$var wire 1 m" i1 $end
$var wire 1 l" o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 l" in $end
$var wire 1 k" out $end
$var reg 1 n" df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p1 $end
$var wire 1 o" _in $end
$var wire 1 ) clk $end
$var wire 1 p" in $end
$var wire 1 f" load $end
$var wire 1 q" out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 q" i0 $end
$var wire 1 p" i1 $end
$var wire 1 f" j $end
$var wire 1 o" o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 r" df_in $end
$var wire 1 o" in $end
$var wire 1 q" out $end
$var wire 1 , reset $end
$var wire 1 s" reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 s" o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 o" i0 $end
$var wire 1 s" i1 $end
$var wire 1 r" o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 r" in $end
$var wire 1 q" out $end
$var reg 1 t" df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p2 $end
$var wire 1 u" _in $end
$var wire 1 ) clk $end
$var wire 1 v" in $end
$var wire 1 f" load $end
$var wire 1 w" out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 w" i0 $end
$var wire 1 v" i1 $end
$var wire 1 f" j $end
$var wire 1 u" o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 x" df_in $end
$var wire 1 u" in $end
$var wire 1 w" out $end
$var wire 1 , reset $end
$var wire 1 y" reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 y" o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 u" i0 $end
$var wire 1 y" i1 $end
$var wire 1 x" o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 x" in $end
$var wire 1 w" out $end
$var reg 1 z" df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p3 $end
$var wire 1 {" _in $end
$var wire 1 ) clk $end
$var wire 1 |" in $end
$var wire 1 f" load $end
$var wire 1 }" out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 }" i0 $end
$var wire 1 |" i1 $end
$var wire 1 f" j $end
$var wire 1 {" o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 ~" df_in $end
$var wire 1 {" in $end
$var wire 1 }" out $end
$var wire 1 , reset $end
$var wire 1 !# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 !# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 {" i0 $end
$var wire 1 !# i1 $end
$var wire 1 ~" o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 ~" in $end
$var wire 1 }" out $end
$var reg 1 "# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p4 $end
$var wire 1 ## _in $end
$var wire 1 ) clk $end
$var wire 1 $# in $end
$var wire 1 f" load $end
$var wire 1 %# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 %# i0 $end
$var wire 1 $# i1 $end
$var wire 1 f" j $end
$var wire 1 ## o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 &# df_in $end
$var wire 1 ## in $end
$var wire 1 %# out $end
$var wire 1 , reset $end
$var wire 1 '# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 '# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 ## i0 $end
$var wire 1 '# i1 $end
$var wire 1 &# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 &# in $end
$var wire 1 %# out $end
$var reg 1 (# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p5 $end
$var wire 1 )# _in $end
$var wire 1 ) clk $end
$var wire 1 *# in $end
$var wire 1 f" load $end
$var wire 1 +# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 +# i0 $end
$var wire 1 *# i1 $end
$var wire 1 f" j $end
$var wire 1 )# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 ,# df_in $end
$var wire 1 )# in $end
$var wire 1 +# out $end
$var wire 1 , reset $end
$var wire 1 -# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 -# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 )# i0 $end
$var wire 1 -# i1 $end
$var wire 1 ,# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 ,# in $end
$var wire 1 +# out $end
$var reg 1 .# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p6 $end
$var wire 1 /# _in $end
$var wire 1 ) clk $end
$var wire 1 0# in $end
$var wire 1 f" load $end
$var wire 1 1# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 1# i0 $end
$var wire 1 0# i1 $end
$var wire 1 f" j $end
$var wire 1 /# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 2# df_in $end
$var wire 1 /# in $end
$var wire 1 1# out $end
$var wire 1 , reset $end
$var wire 1 3# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 3# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 /# i0 $end
$var wire 1 3# i1 $end
$var wire 1 2# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 2# in $end
$var wire 1 1# out $end
$var reg 1 4# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p7 $end
$var wire 1 5# _in $end
$var wire 1 ) clk $end
$var wire 1 6# in $end
$var wire 1 f" load $end
$var wire 1 7# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 7# i0 $end
$var wire 1 6# i1 $end
$var wire 1 f" j $end
$var wire 1 5# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 8# df_in $end
$var wire 1 5# in $end
$var wire 1 7# out $end
$var wire 1 , reset $end
$var wire 1 9# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 9# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 5# i0 $end
$var wire 1 9# i1 $end
$var wire 1 8# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 8# in $end
$var wire 1 7# out $end
$var reg 1 :# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p8 $end
$var wire 1 ;# _in $end
$var wire 1 ) clk $end
$var wire 1 <# in $end
$var wire 1 f" load $end
$var wire 1 =# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 =# i0 $end
$var wire 1 <# i1 $end
$var wire 1 f" j $end
$var wire 1 ;# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 ># df_in $end
$var wire 1 ;# in $end
$var wire 1 =# out $end
$var wire 1 , reset $end
$var wire 1 ?# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 ?# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 ;# i0 $end
$var wire 1 ?# i1 $end
$var wire 1 ># o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 ># in $end
$var wire 1 =# out $end
$var reg 1 @# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p9 $end
$var wire 1 A# _in $end
$var wire 1 ) clk $end
$var wire 1 B# in $end
$var wire 1 f" load $end
$var wire 1 C# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 C# i0 $end
$var wire 1 B# i1 $end
$var wire 1 f" j $end
$var wire 1 A# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 D# df_in $end
$var wire 1 A# in $end
$var wire 1 C# out $end
$var wire 1 , reset $end
$var wire 1 E# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 E# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 A# i0 $end
$var wire 1 E# i1 $end
$var wire 1 D# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 D# in $end
$var wire 1 C# out $end
$var reg 1 F# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p10 $end
$var wire 1 G# _in $end
$var wire 1 ) clk $end
$var wire 1 H# in $end
$var wire 1 f" load $end
$var wire 1 I# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 I# i0 $end
$var wire 1 H# i1 $end
$var wire 1 f" j $end
$var wire 1 G# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 J# df_in $end
$var wire 1 G# in $end
$var wire 1 I# out $end
$var wire 1 , reset $end
$var wire 1 K# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 K# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 G# i0 $end
$var wire 1 K# i1 $end
$var wire 1 J# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 J# in $end
$var wire 1 I# out $end
$var reg 1 L# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p11 $end
$var wire 1 M# _in $end
$var wire 1 ) clk $end
$var wire 1 N# in $end
$var wire 1 f" load $end
$var wire 1 O# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 O# i0 $end
$var wire 1 N# i1 $end
$var wire 1 f" j $end
$var wire 1 M# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 P# df_in $end
$var wire 1 M# in $end
$var wire 1 O# out $end
$var wire 1 , reset $end
$var wire 1 Q# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 Q# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 M# i0 $end
$var wire 1 Q# i1 $end
$var wire 1 P# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 P# in $end
$var wire 1 O# out $end
$var reg 1 R# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p12 $end
$var wire 1 S# _in $end
$var wire 1 ) clk $end
$var wire 1 T# in $end
$var wire 1 f" load $end
$var wire 1 U# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 U# i0 $end
$var wire 1 T# i1 $end
$var wire 1 f" j $end
$var wire 1 S# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 V# df_in $end
$var wire 1 S# in $end
$var wire 1 U# out $end
$var wire 1 , reset $end
$var wire 1 W# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 W# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 S# i0 $end
$var wire 1 W# i1 $end
$var wire 1 V# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 V# in $end
$var wire 1 U# out $end
$var reg 1 X# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p13 $end
$var wire 1 Y# _in $end
$var wire 1 ) clk $end
$var wire 1 Z# in $end
$var wire 1 f" load $end
$var wire 1 [# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 [# i0 $end
$var wire 1 Z# i1 $end
$var wire 1 f" j $end
$var wire 1 Y# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 \# df_in $end
$var wire 1 Y# in $end
$var wire 1 [# out $end
$var wire 1 , reset $end
$var wire 1 ]# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 ]# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 Y# i0 $end
$var wire 1 ]# i1 $end
$var wire 1 \# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 \# in $end
$var wire 1 [# out $end
$var reg 1 ^# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p14 $end
$var wire 1 _# _in $end
$var wire 1 ) clk $end
$var wire 1 `# in $end
$var wire 1 f" load $end
$var wire 1 a# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 a# i0 $end
$var wire 1 `# i1 $end
$var wire 1 f" j $end
$var wire 1 _# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 b# df_in $end
$var wire 1 _# in $end
$var wire 1 a# out $end
$var wire 1 , reset $end
$var wire 1 c# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 c# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 _# i0 $end
$var wire 1 c# i1 $end
$var wire 1 b# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 b# in $end
$var wire 1 a# out $end
$var reg 1 d# df_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module p15 $end
$var wire 1 e# _in $end
$var wire 1 ) clk $end
$var wire 1 ( in $end
$var wire 1 f" load $end
$var wire 1 f# out $end
$var wire 1 , reset $end
$scope module mux2_0 $end
$var wire 1 f# i0 $end
$var wire 1 ( i1 $end
$var wire 1 f" j $end
$var wire 1 e# o $end
$upscope $end
$scope module dfr_1 $end
$var wire 1 ) clk $end
$var wire 1 g# df_in $end
$var wire 1 e# in $end
$var wire 1 f# out $end
$var wire 1 , reset $end
$var wire 1 h# reset_ $end
$scope module invert_0 $end
$var wire 1 , i $end
$var wire 1 h# o $end
$upscope $end
$scope module and2_0 $end
$var wire 1 e# i0 $end
$var wire 1 h# i1 $end
$var wire 1 g# o $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 g# in $end
$var wire 1 f# out $end
$var reg 1 i# df_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xi#
0h#
0g#
xf#
0e#
xd#
0c#
0b#
xa#
0`#
0_#
x^#
0]#
0\#
x[#
0Z#
0Y#
xX#
0W#
0V#
xU#
0T#
0S#
xR#
0Q#
0P#
xO#
0N#
0M#
xL#
0K#
0J#
xI#
0H#
0G#
xF#
0E#
0D#
xC#
0B#
0A#
x@#
0?#
0>#
x=#
0<#
0;#
x:#
09#
08#
x7#
06#
05#
x4#
03#
02#
x1#
00#
0/#
x.#
0-#
0,#
x+#
0*#
0)#
x(#
0'#
0&#
x%#
0$#
0##
x"#
0!#
0~"
x}"
1|"
1{"
xz"
0y"
0x"
xw"
0v"
0u"
xt"
0s"
0r"
xq"
0p"
0o"
xn"
0m"
0l"
xk"
0j"
0i"
b10000 h"
bx g"
1f"
0e"
xd"
0c"
xb"
0a"
x`"
0_"
x^"
0]"
x\"
0["
xZ"
0Y"
xX"
0W"
xV"
0U"
0T"
xS"
0R"
0Q"
xP"
0O"
0N"
xM"
1L"
1K"
xJ"
0I"
0H"
xG"
0F"
0E"
xD"
0C"
0B"
xA"
0@"
0?"
x>"
0="
b10000 <"
bx ;"
b10000 :"
b10000 9"
bx 8"
b10000 7"
b10000 6"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
1=
0<
0;
0:
09
08
07
06
15
04
b10000 3
b0 2
b10001 1
b0 0
b10000 /
1.
b10000 -
1,
b10000 +
b10001 *
0)
0(
b10000 '
1&
1%
b10001 $
0#
b10000 "
b10000 !
$end
#50
0>"
0A"
0D"
0G"
0J"
0M"
0P"
0S"
0V"
0X"
0Z"
0\"
0^"
0`"
0b"
0d"
0n"
0k"
0t"
0q"
0z"
0w"
0"#
0}"
0(#
0%#
0.#
0+#
04#
01#
0:#
07#
0@#
0=#
0F#
0C#
0L#
0I#
0R#
0O#
0X#
0U#
0^#
0[#
0d#
0a#
0i#
0f#
b0 8"
b0 ;"
b0 g"
1#
1)
#100
1~"
0#
0)
0%
0,
1m"
1s"
1y"
1!#
1'#
1-#
13#
19#
1?#
1E#
1K#
1Q#
1W#
1]#
1c#
1h#
#150
1G"
1"#
1}"
b1000 8"
b1000 ;"
b1000 g"
1#
1)
#200
1x"
0~"
1u"
0{"
1v"
0|"
b1000 -
b1000 3
b1000 9"
b1000 h"
1I"
0L"
b1000 !
b1000 +
b1000 /
b1000 7"
b1000 <"
0#
0)
0&
0.
#250
1r"
0x"
1o"
0u"
1p"
0v"
b100 -
b100 3
b100 9"
b100 h"
1F"
0I"
b100 !
b100 +
b100 /
b100 7"
b100 <"
1D"
0G"
1z"
1w"
0"#
0}"
b100 8"
b100 ;"
b100 g"
1#
1)
#300
0#
0)
#350
0r"
1l"
0o"
1i"
0p"
1j"
b10 -
b10 3
b10 9"
b10 h"
0F"
1C"
b10 !
b10 +
b10 /
b10 7"
b10 <"
0D"
1A"
0z"
0w"
1t"
1q"
b10 8"
b10 ;"
b10 g"
1#
1)
#400
0#
0)
#450
18#
1P#
15#
1M#
16#
1N#
1I
1q
1M
1u
0l"
1H
1p
0i"
16
1>
b10001 0
0j"
14
b1000100000001 -
b1000100000001 3
b1000100000001 9"
b1000100000001 h"
1@"
0C"
b1 !
b1 +
b1 /
b1 7"
b1 <"
1>"
0A"
1n"
1k"
0t"
0q"
b1 8"
b1 ;"
b1 g"
1#
1)
#500
0#
0)
#550
08#
0P#
05#
0M#
1J#
06#
0N#
1G#
0I
0q
1H#
12#
0M
0u
1g
1/#
0H
0p
1k
10#
06
0>
b0 0
1e
04
b100010000000 -
b100010000000 3
b100010000000 9"
b100010000000 h"
1]"
1U"
0@"
b100010000000 !
b100010000000 +
b100010000000 /
b100010000000 7"
b100010000000 <"
1\"
1S"
0>"
1R#
1O#
1:#
17#
0n"
0k"
b100010000000 8"
b100010000000 ;"
b100010000000 g"
1#
1)
#600
0#
0)
#650
1D#
0J#
1A#
0G#
1,#
02#
1B#
0H#
1)#
0/#
1]
0g
1*#
00#
1a
0k
b10001000000 -
b10001000000 3
b10001000000 9"
b10001000000 h"
1[
0e
1R"
0U"
1["
0]"
b10001000000 !
b10001000000 +
b10001000000 /
b10001000000 7"
b10001000000 <"
1P"
0S"
1Z"
0\"
14#
11#
0:#
07#
1L#
1I#
0R#
0O#
b10001000000 8"
b10001000000 ;"
b10001000000 g"
1#
1)
#700
0#
0)
#750
0D#
1>#
0A#
1;#
0B#
1<#
0,#
1&#
0]
1S
0)#
1##
0a
1W
0*#
1$#
0[
1Q
b1000100000 -
b1000100000 3
b1000100000 9"
b1000100000 h"
0["
1Y"
0R"
1O"
b1000100000 !
b1000100000 +
b1000100000 /
b1000100000 7"
b1000100000 <"
0Z"
1X"
0P"
1M"
0L#
0I#
1F#
1C#
04#
01#
1.#
1+#
b1000100000 8"
b1000100000 ;"
b1000100000 g"
1#
1)
#800
0#
0)
#850
18#
0>#
15#
0;#
1~"
0&#
16#
0<#
1{"
0##
1I
0S
1|"
0$#
1M
0W
b100010000 -
b100010000 3
b100010000 9"
b100010000 h"
1G
0Q
1L"
0O"
1W"
0Y"
b100010000 !
b100010000 +
b100010000 /
b100010000 7"
b100010000 <"
1J"
0M"
1V"
0X"
1(#
1%#
0.#
0+#
1@#
1=#
0F#
0C#
b100010000 8"
b100010000 ;"
b100010000 g"
1#
1)
#900
0#
0)
#950
08#
05#
06#
12#
0~"
1x"
0I
1/#
0{"
1u"
0M
10#
0|"
1v"
0G
b10001000 -
b10001000 3
b10001000 9"
b10001000 h"
0W"
1U"
0L"
1I"
b10001000 !
b10001000 +
b10001000 /
b10001000 7"
b10001000 <"
0V"
1S"
0J"
1G"
0@#
0=#
1:#
17#
0(#
0%#
1"#
1}"
b10001000 8"
b10001000 ;"
b10001000 g"
1#
1)
